#!/bin/bash

### Script to make starting coda daemons a little easier

set -e

# built from with ansible jinja2

if pgrep -f "coda daemon" > /dev/null; then
    echo "Coda Already Running"
    exit
fi

if [ ! -d "/home/admin/test-coda" ]; then
  mkdir -p /home/admin/test-coda
fi

# whitelist ips (derived by ansible - global)
echo "( 127.0.0.1 {% for host in groups['all']  %}{{ hostvars[host].ec2_ip_address }} {% endfor %})" > /home/admin/test-coda/client_whitelist

# external ip (derived by ansible - unique per host)
EXTERNAL_IP='{{ ec2_ip_address }}'

CODA_CLIENTPORT=8301
CODA_RPCPORT=8301
CODA_EXTPORT=$(($CODA_RPCPORT + 1))
CODA_PEERPORT=$(($CODA_RPCPORT + 2))
CODA_QLPORT=$(($CODA_RPCPORT + 3))

CODA_PRIVKEY_PASS=testnet

CODA_SEED="{{ seed_ip }}:${CODA_PEERPORT}" # derived from ansible
CODA_ROLE=$(cat /etc/coda-rolename)

if [ -e /etc/coda-proposer_order ]; then
    CODA_PROPOSER_ORDER=$(cat /etc/coda-proposer_order)
else
    CODA_PROPOSER_ORDER='0'
fi

CLI_COMMON="-background -tracing "
CLI_COMMON+="-client-port ${CODA_CLIENTPORT} " # Default
CLI_COMMON+="-external-port ${CODA_EXTPORT} "
CLI_COMMON+="-config-directory /home/admin/test-coda "
CLI_COMMON+="-external-ip ${EXTERNAL_IP} "
CLI_COMMON+="-rest-port ${CODA_QLPORT} "

CORE_COUNT=`nproc --all`
CORE_SCALE=$(( $CORE_COUNT / 8 ))

# Main start
case $CODA_ROLE in
"proposer")
    CLI_ROLE="-peer ${CODA_SEED} "
    CLI_ROLE+=" -propose-key /home/admin/testkeys/high${CODA_PROPOSER_ORDER} "
    ;;
"snarker")
    CLI_ROLE="-peer ${CODA_SEED} "
    CLI_ROLE+="-run-snark-worker 8QnLTHMZPbBFezS8j8kDPu6iLiwPsTPyX2vMwcFzjiDZbp6GQDEBEyLbYvzApSdTsE "
    CLI_ROLE+="-snark-worker-fee 1"
    export OMP_NUM_THREADS=8
    ;;
"joiner")
    CLI_ROLE="-peer ${CODA_SEED} "
    CLI_ROLE+=""
    ;;
"seed")
    CLI_ROLE=""
    ;;
*)
    echo "Uknown CODA_ROLE ${CODA_ROLE}"
    exit
esac

echo "Starting coda ${CODA_ROLE}"
echo "CODA_PRIVKEY_PASS=testnet coda daemon  ${CLI_COMMON} ${CLI_ROLE}"
CODA_PRIVKEY_PASS=testnet coda daemon ${CLI_COMMON} ${CLI_ROLE}

# Secondary start of snark workers
case $CODA_ROLE in
"snarker")
    echo "Sleeping before adding more snark workers."
    sleep 10 # wait for daemon to come up
    export OMP_NUM_THREADS=8
    while [ "$(pgrep  -f 'coda internal snark-worker' | wc -l)" -lt "$CORE_SCALE" ]; do
        /home/admin/scripts/snark-worker.sh
        sleep 5 # wait for it to come up
    done
    ;;
"proposer")
    echo "Sleeping before adding more snark workers."
    sleep 10 # wait for daemon to come up
    export OMP_NUM_THREADS=8
    while [ "$(pgrep  -f 'coda internal snark-worker' | wc -l)" -lt "$CORE_SCALE" ]; do
        nice /home/admin/scripts/snark-worker.sh {{ snark_leader_ip }}:8301
        sleep 5 # wait for it to come up
    done
    ;;
esac