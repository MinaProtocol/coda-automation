apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ tpl $.Values.faucet.fullname . }}
  labels:
    app: {{ tpl $.Values.faucet.fullname . }}
spec:
  replicas: 1
  selector:
    matchLabels:
      app: {{ tpl $.Values.faucet.fullname . }}
  template:
    metadata:
      labels:
        app: {{ tpl $.Values.faucet.fullname . }}
        testnet: {{ $.Values.testnetName }}
        role: discord-faucet
        version: {{ (split ":" $.Values.coda.image)._1 }}
      annotations:
        prometheus.io/scrape: 'true'
        prometheus.io/path: '/metrics'
    spec:
      initContainers:
      - name: fix-perms
        image: busybox
        command:
        - sh
        - -c
        - for dir in keys echo-keys faucet-keys; do [ -d /$dir ] && /bin/cp /$dir/* /wallet-keys; done; /bin/chmod 0700 /wallet-keys
        volumeMounts:
        - name: echo-service-key
          mountPath: "/echo-keys/"
          readOnly: true
        - name: faucet-service-key
          mountPath: "/faucet-keys/"
          readOnly: true
        - name: wallet-keys
          mountPath: /wallet-keys
        securityContext:
          runAsUser: 0
      - name: install-key
        image: {{ $.Values.coda.image }}
        command:
        - bash
        - -c
        - for key in key echo-key faucet-key; do [ ! -f /root/wallet-keys/$key ] || coda accounts import -config-directory /root/.coda-config -privkey-path /root/wallet-keys/$key; done
        volumeMounts:
        - name: wallet-keys
          mountPath: /root/wallet-keys
        - name: config-dir
          mountPath: /root/.coda-config
        env: 
          - name: CODA_PRIVKEY_PASS
            value: {{ $.Values.faucet.codaPrivkeyPass | quote }}
      containers:
      - name: faucet
        resources:
          requests:
            memory: 512m
            cpu: 0.1
        image: {{ $.Values.faucet.image }}
        env:
          - name: CODA_GRAPHQL_HOST
            value: "0.0.0.0"
          - name: CODA_GRAPHQL_PORT
            value: "3085"
          - name: ECHO_PUBLICKEY
            valueFrom:
              secretKeyRef:
                name: echo-service-key
                key: pub
          - name: ECHO_PASSWORD
            value: {{ $.Values.faucet.codaPrivkeyPass | quote }}
          - name: FAUCET_PUBLICKEY
            valueFrom:
              secretKeyRef:
                name: faucet-service-key
                key: pub
          - name: FAUCET_PASSWORD
            value: {{ $.Values.faucet.codaPrivkeyPass | quote }}
          - name: DISCORD_API_KEY
            valueFrom:
              secretKeyRef:
                name: o1-discord-api-key
                key: o1discord
          - name: FAUCET_AMOUNT
            value: {{ $.Values.faucet.amount | quote }}
          - name: FEE_AMOUNT
            value: {{ $.Values.faucet.fee | quote }}
        imagePullPolicy: Always
      - name: coda
        resources:
          limits:
            memory: 6.0Gi
          requests:
            memory: 2.0Gi
            cpu: 1
        image: {{ $.Values.coda.image }}
        command: ["/usr/bin/dumb-init", "/root/init_coda.sh"]
        args: [ "daemon",
          "-log-level", {{ $.Values.coda.logLevel }},
          "-log-json",
          "-log-received-blocks", "true",
          "-log-snark-work-gossip", "true",
          "-config-directory", "/root/.coda-config",
          "-client-port", "$(DAEMON_CLIENT_PORT)",
          "-rest-port", "$(DAEMON_REST_PORT)",
          "-insecure-rest-server",
          "-external-port", "$(DAEMON_EXTERNAL_PORT)",
          "-metrics-port", "$(DAEMON_METRICS_PORT)",
          {{- if $.Values.coda.genesis.active -}}
          "-config-file", "/config/daemon.json",
          "-generate-genesis-proof", "true",
          {{- end -}}
          {{- range $.Values.coda.seedPeers -}}
          "-peer", {{ . | quote }},
          {{- end -}}
        ]
        env:
          - name: DAEMON_REST_PORT
            value: "3085"
          - name: DAEMON_CLIENT_PORT
            value: "8301"
          - name: DAEMON_METRICS_PORT
            value: "10000"
          - name: DAEMON_EXTERNAL_PORT
            value: {{ add $.Values.faucet.hostPort | quote }}
          - name: CODA_PRIVKEY_PASS
            value: {{ $.Values.faucet.codaPrivkeyPass | quote }}
        ports:
          - containerPort: {{ add $.Values.faucet.hostPort }}
            hostPort: {{ add $.Values.faucet.hostPort }}
            protocol: TCP
          - name: graphql
            containerPort: 3085
          - name: metrics
            containerPort: 10000
        imagePullPolicy: Always
        volumeMounts:
        - name: wallet-keys
          mountPath: /root/wallet-keys
        - name: config-dir
          mountPath: /root/.coda-config
        {{- if $.Values.coda.genesis.active }}
        - name: daemon-config
          mountPath: "/config/"
        {{- end }}
      volumes:
      - name: echo-service-key
        secret:
          secretName: echo-service-key
          defaultMode: 256
          items:
          - key: key
            path: echo-key
          - key: pub
            path: echo-key.pub
      - name: faucet-service-key
        secret:
          secretName: faucet-service-key
          defaultMode: 256
          items:
          - key: key
            path: faucet-key
          - key: pub
            path: faucet-key.pub
      - name: wallet-keys
        emptyDir: {}
      - name: config-dir
        emptyDir: {}
      {{- if $.Values.coda.genesis.active }}
      - name: daemon-config
        configMap:
          name: {{ tpl $.Values.faucet.fullname . }}-daemon-config
      {{- end }}